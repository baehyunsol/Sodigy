// TODO: make a test runner that checks this file generates warnings

fn foo() -> Option<Int> = None;

assert unused_if_let_bind() == 2;
fn unused_if_let_bind() = {
    if let Some(x) = foo() { 1 } else { 2 }
};

assert unused_match_bind() == 2;
fn unused_match_bind() = match foo() {
    Some(x) => { 1 },
    None => { 2 },
};

let recursive_lambda = {
    // Even though it references itself, it's an unused name.
    let factorial = \(n) => if n < 2 { 1 } else { n * factorial(n - 1) };

    0
};
