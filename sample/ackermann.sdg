func ackermann(m: Int, n: Int): Int = {
    if m == 0 {
        n + 1
    } else if n == 0 {
        ackermann(m - 1, 1)
    } else {
        ackermann(m, ackermann(m + 1, n))
    }
};

// mutually recursive functions
func ackermann1(m: Int, n: Int): Int = {
    if m == 0 {
        n + 1
    } else if n == 0 {
        ackermann1(m - 1, 1)
    } else {
        ackermann2(m, ackermann3(m + 1, n))
    }
};

func ackermann2(m: Int, n: Int): Int = {
    if m == 0 {
        n + 1
    } else if n == 0 {
        ackermann2(m - 1, 1)
    } else {
        ackermann3(m, ackermann1(m + 1, n))
    }
};

func ackermann3(m: Int, n: Int): Int = {
    if m == 0 {
        n + 1
    } else if n == 0 {
        ackermann3(m - 1, 1)
    } else {
        ackermann1(m, ackermann2(m + 1, n))
    }
};
