# This file is just a brain-storming

let struct Ratio = {
    denom: Int,
    numer: Int,
};

# it's not a new type: all the methods of `List` can be applied to `String`s
let String: Type = List(Char);

# todo: how about `let type Byte = Int;`
# todo: what happens when it overflows?
# todo: i want to inherit some methods of `Int`, but not all
@new_type
@int_max(255)
@int_min(0)
let Byte: Type = Int;

@new_type
@int_max(1114111)
@int_min(0)
let Char: Type = Int;

let enum Bool = {
    True, False,
};

let enum Option<T> = {
    None, Some(T),
};

let enum Result<T, E> = {
    Ok(T), Err(E),
};
